"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.importLoadOrder = exports.exportLoadOrder = void 0;
const vortex_api_1 = require("vortex-api");
const statics_1 = require("../statics");
const util_1 = require("../util");
async function exportLoadOrder(state, modIds) {
    const profileId = vortex_api_1.selectors.lastActiveProfileForGame(state, statics_1.GAME_ID);
    if (profileId === undefined) {
        return Promise.reject(new vortex_api_1.util.ProcessCanceled('Invalid profile id'));
    }
    const loadOrder = state?.persistent?.loadOrder?.[profileId];
    if (loadOrder === undefined) {
        return Promise.resolve(undefined);
    }
    const filteredLO = loadOrder.filter((lo) => modIds.find(id => (0, util_1.transformId)(id) === lo) !== undefined);
    return Promise.resolve(filteredLO);
}
exports.exportLoadOrder = exportLoadOrder;
async function importLoadOrder(api, collection) {
    const state = api.getState();
    const profileId = vortex_api_1.selectors.lastActiveProfileForGame(state, statics_1.GAME_ID);
    if (profileId === undefined) {
        return Promise.reject(new vortex_api_1.util.ProcessCanceled(`Invalid profile id ${profileId}`));
    }
    api.store.dispatch(vortex_api_1.actions.setLoadOrder(profileId, collection.loadOrder));
    return Promise.resolve(undefined);
}
exports.importLoadOrder = importLoadOrder;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hZE9yZGVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibG9hZE9yZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDJDQUE2RDtBQUM3RCx3Q0FBcUM7QUFDckMsa0NBQXNDO0FBSS9CLEtBQUssVUFBVSxlQUFlLENBQ25DLEtBQW1CLEVBQ25CLE1BQWdCO0lBRWhCLE1BQU0sU0FBUyxHQUFHLHNCQUFTLENBQUMsd0JBQXdCLENBQUMsS0FBSyxFQUFFLGlCQUFPLENBQUMsQ0FBQztJQUNyRSxJQUFJLFNBQVMsS0FBSyxTQUFTLEVBQUU7UUFDM0IsT0FBTyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksaUJBQUksQ0FBQyxlQUFlLENBQUMsb0JBQW9CLENBQUMsQ0FBQyxDQUFDO0tBQ3ZFO0lBRUQsTUFBTSxTQUFTLEdBQUcsS0FBSyxFQUFFLFVBQVUsRUFBRSxTQUFTLEVBQUUsQ0FBQyxTQUFTLENBQUMsQ0FBQztJQUM1RCxJQUFJLFNBQVMsS0FBSyxTQUFTLEVBQUU7UUFDM0IsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0tBQ25DO0lBRUQsTUFBTSxVQUFVLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsRUFBRSxFQUFFLENBQ3pDLE1BQU0sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFBLGtCQUFXLEVBQUMsRUFBRSxDQUFDLEtBQUssRUFBUyxDQUFDLEtBQUssU0FBUyxDQUFDLENBQUM7SUFDbEUsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0FBQ3JDLENBQUM7QUFqQkQsMENBaUJDO0FBRU0sS0FBSyxVQUFVLGVBQWUsQ0FBQyxHQUF3QixFQUN4QixVQUErQjtJQUNuRSxNQUFNLEtBQUssR0FBRyxHQUFHLENBQUMsUUFBUSxFQUFFLENBQUM7SUFFN0IsTUFBTSxTQUFTLEdBQUcsc0JBQVMsQ0FBQyx3QkFBd0IsQ0FBQyxLQUFLLEVBQUUsaUJBQU8sQ0FBQyxDQUFDO0lBQ3JFLElBQUksU0FBUyxLQUFLLFNBQVMsRUFBRTtRQUMzQixPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxpQkFBSSxDQUFDLGVBQWUsQ0FBQyxzQkFBc0IsU0FBUyxFQUFFLENBQUMsQ0FBQyxDQUFDO0tBQ3BGO0lBRUQsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsb0JBQU8sQ0FBQyxZQUFZLENBQUMsU0FBUyxFQUFFLFVBQVUsQ0FBQyxTQUFnQixDQUFDLENBQUMsQ0FBQztJQUNqRixPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDcEMsQ0FBQztBQVhELDBDQVdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgYWN0aW9ucywgc2VsZWN0b3JzLCB0eXBlcywgdXRpbCB9IGZyb20gJ3ZvcnRleC1hcGknO1xuaW1wb3J0IHsgR0FNRV9JRCB9IGZyb20gJy4uL3N0YXRpY3MnO1xuaW1wb3J0IHsgdHJhbnNmb3JtSWQgfSBmcm9tICcuLi91dGlsJztcblxuaW1wb3J0IHsgSUtDRENvbGxlY3Rpb25zRGF0YSB9IGZyb20gJy4vdHlwZXMnO1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZXhwb3J0TG9hZE9yZGVyKFxuICBzdGF0ZTogdHlwZXMuSVN0YXRlLFxuICBtb2RJZHM6IHN0cmluZ1tdXG4pOiBQcm9taXNlPHR5cGVzLklMb2FkT3JkZXJFbnRyeVtdPiB7XG4gIGNvbnN0IHByb2ZpbGVJZCA9IHNlbGVjdG9ycy5sYXN0QWN0aXZlUHJvZmlsZUZvckdhbWUoc3RhdGUsIEdBTUVfSUQpO1xuICBpZiAocHJvZmlsZUlkID09PSB1bmRlZmluZWQpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IHV0aWwuUHJvY2Vzc0NhbmNlbGVkKCdJbnZhbGlkIHByb2ZpbGUgaWQnKSk7XG4gIH1cblxuICBjb25zdCBsb2FkT3JkZXIgPSBzdGF0ZT8ucGVyc2lzdGVudD8ubG9hZE9yZGVyPy5bcHJvZmlsZUlkXTtcbiAgaWYgKGxvYWRPcmRlciA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh1bmRlZmluZWQpO1xuICB9XG5cbiAgY29uc3QgZmlsdGVyZWRMTyA9IGxvYWRPcmRlci5maWx0ZXIoKGxvKSA9PiAvL0ZJWE1FICdMb2FkT3JkZXInIGlzIG5vdCB7W21vZElEOiBzdHJpbmddOiAnSUxvYWRPcmRlckVudHJ5W10nfVxuICAgIG1vZElkcy5maW5kKGlkID0+IHRyYW5zZm9ybUlkKGlkKSA9PT0gbG8gYXMgYW55KSAhPT0gdW5kZWZpbmVkKTtcbiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShmaWx0ZXJlZExPKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGltcG9ydExvYWRPcmRlcihhcGk6IHR5cGVzLklFeHRlbnNpb25BcGksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbGxlY3Rpb246IElLQ0RDb2xsZWN0aW9uc0RhdGEpOiBQcm9taXNlPHZvaWQ+IHtcbiAgY29uc3Qgc3RhdGUgPSBhcGkuZ2V0U3RhdGUoKTtcblxuICBjb25zdCBwcm9maWxlSWQgPSBzZWxlY3RvcnMubGFzdEFjdGl2ZVByb2ZpbGVGb3JHYW1lKHN0YXRlLCBHQU1FX0lEKTtcbiAgaWYgKHByb2ZpbGVJZCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyB1dGlsLlByb2Nlc3NDYW5jZWxlZChgSW52YWxpZCBwcm9maWxlIGlkICR7cHJvZmlsZUlkfWApKTtcbiAgfVxuXG4gIGFwaS5zdG9yZS5kaXNwYXRjaChhY3Rpb25zLnNldExvYWRPcmRlcihwcm9maWxlSWQsIGNvbGxlY3Rpb24ubG9hZE9yZGVyIGFzIGFueSkpO1xuICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHVuZGVmaW5lZCk7XG59XG4iXX0=