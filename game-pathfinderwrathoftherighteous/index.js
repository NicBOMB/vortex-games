"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const path_1 = __importDefault(require("path"));
const vortex_api_1 = require("vortex-api");
const GAME_ID = 'pathfinderwrathoftherighteous';
const NAME = 'Pathfinder: Wrath\tof the Righteous';
const STEAM_ID = '1184370';
const GOG_ID = '1207187357';
function findGame() {
    return vortex_api_1.util.GameStoreHelper.findByAppId([STEAM_ID, GOG_ID])
        .then(game => game.gamePath);
}
function setup(discovery) {
    return vortex_api_1.fs.ensureDirWritableAsync(path_1.default.join(discovery.path, 'Mods'));
}
async function resolveGameVersion(discoveryPath) {
    const versionFilepath = path_1.default.join(discoveryPath, 'Wrath_Data', 'StreamingAssets', 'Version.info');
    try {
        const data = await vortex_api_1.fs.readFileAsync(versionFilepath, { encoding: 'utf8' });
        const segments = data.split(' ');
        return (segments[3])
            ? Promise.resolve(segments[3])
            : Promise.reject(new vortex_api_1.util.DataInvalid('Failed to resolve version'));
    }
    catch (err) {
        return Promise.reject(err);
    }
}
function main(context) {
    context.requireExtension('modtype-umm');
    context.registerGame({
        id: GAME_ID,
        name: NAME,
        logo: 'gameart.jpg',
        mergeMods: true,
        queryPath: findGame,
        queryModPath: () => 'Mods',
        executable: () => 'Wrath.exe',
        getGameVersion: resolveGameVersion,
        requiredFiles: ['Wrath.exe'],
        environment: {
            SteamAPPId: STEAM_ID,
        },
        details: {
            steamAppId: +STEAM_ID,
        },
        setup,
    });
    context.once(() => {
        if (context.api.ext.ummAddGame !== undefined) {
            context.api.ext.ummAddGame({
                gameId: GAME_ID,
                autoDownloadUMM: true,
            });
        }
    });
    return true;
}
exports.default = main;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLGdEQUF3QjtBQUN4QiwyQ0FBNkM7QUFFN0MsTUFBTSxPQUFPLEdBQUcsK0JBQStCLENBQUM7QUFDaEQsTUFBTSxJQUFJLEdBQUcscUNBQXFDLENBQUM7QUFDbkQsTUFBTSxRQUFRLEdBQUcsU0FBUyxDQUFDO0FBQzNCLE1BQU0sTUFBTSxHQUFHLFlBQVksQ0FBQztBQUU1QixTQUFTLFFBQVE7SUFDZixPQUFPLGlCQUFJLENBQUMsZUFBZSxDQUFDLFdBQVcsQ0FBQyxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztTQUN4RCxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7QUFDakMsQ0FBQztBQUVELFNBQVMsS0FBSyxDQUFDLFNBQVM7SUFDdEIsT0FBTyxlQUFFLENBQUMsc0JBQXNCLENBQUMsY0FBSSxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxDQUFDLENBQUM7QUFDdEUsQ0FBQztBQUVELEtBQUssVUFBVSxrQkFBa0IsQ0FBQyxhQUFxQjtJQUNyRCxNQUFNLGVBQWUsR0FBRyxjQUFJLENBQUMsSUFBSSxDQUFDLGFBQWEsRUFBRSxZQUFZLEVBQUUsaUJBQWlCLEVBQUUsY0FBYyxDQUFDLENBQUM7SUFDbEcsSUFBSTtRQUNGLE1BQU0sSUFBSSxHQUFHLE1BQU0sZUFBRSxDQUFDLGFBQWEsQ0FBQyxlQUFlLEVBQUUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLENBQUMsQ0FBQztRQUMzRSxNQUFNLFFBQVEsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQ2pDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDbEIsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzlCLENBQUMsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLElBQUksaUJBQUksQ0FBQyxXQUFXLENBQUMsMkJBQTJCLENBQUMsQ0FBQyxDQUFDO0tBQ3ZFO0lBQUMsT0FBTyxHQUFHLEVBQUU7UUFDWixPQUFPLE9BQU8sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7S0FDNUI7QUFDSCxDQUFDO0FBRUQsU0FBUyxJQUFJLENBQUMsT0FBZ0M7SUFDNUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLGFBQWEsQ0FBQyxDQUFDO0lBQ3hDLE9BQU8sQ0FBQyxZQUFZLENBQ2xCO1FBQ0UsRUFBRSxFQUFFLE9BQU87UUFDWCxJQUFJLEVBQUUsSUFBSTtRQUNWLElBQUksRUFBRSxhQUFhO1FBQ25CLFNBQVMsRUFBRSxJQUFJO1FBQ2YsU0FBUyxFQUFFLFFBQVE7UUFDbkIsWUFBWSxFQUFFLEdBQUcsRUFBRSxDQUFDLE1BQU07UUFDMUIsVUFBVSxFQUFFLEdBQUcsRUFBRSxDQUFDLFdBQVc7UUFDN0IsY0FBYyxFQUFFLGtCQUFrQjtRQUNsQyxhQUFhLEVBQUUsQ0FBQyxXQUFXLENBQUM7UUFDNUIsV0FBVyxFQUFFO1lBQ1gsVUFBVSxFQUFFLFFBQVE7U0FDckI7UUFDRCxPQUFPLEVBQ1A7WUFDRSxVQUFVLEVBQUUsQ0FBQyxRQUFRO1NBQ3RCO1FBQ0QsS0FBSztLQUNOLENBQUMsQ0FBQztJQUNMLE9BQU8sQ0FBQyxJQUFJLENBQUMsR0FBRyxFQUFFO1FBQ2hCLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsVUFBVSxLQUFLLFNBQVMsRUFBRTtZQUM1QyxPQUFPLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUM7Z0JBQ3pCLE1BQU0sRUFBRSxPQUFPO2dCQUNmLGVBQWUsRUFBRSxJQUFJO2FBQ3RCLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQyxDQUFDLENBQUE7SUFFRixPQUFPLElBQUksQ0FBQztBQUNkLENBQUM7QUFFRCxrQkFBZSxJQUFJLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCB7IGZzLCB0eXBlcywgdXRpbCB9IGZyb20gJ3ZvcnRleC1hcGknO1xuXG5jb25zdCBHQU1FX0lEID0gJ3BhdGhmaW5kZXJ3cmF0aG9mdGhlcmlnaHRlb3VzJztcbmNvbnN0IE5BTUUgPSAnUGF0aGZpbmRlcjogV3JhdGhcXHRvZiB0aGUgUmlnaHRlb3VzJztcbmNvbnN0IFNURUFNX0lEID0gJzExODQzNzAnO1xuY29uc3QgR09HX0lEID0gJzEyMDcxODczNTcnO1xuXG5mdW5jdGlvbiBmaW5kR2FtZSgpIHtcbiAgcmV0dXJuIHV0aWwuR2FtZVN0b3JlSGVscGVyLmZpbmRCeUFwcElkKFtTVEVBTV9JRCwgR09HX0lEXSlcbiAgICAudGhlbihnYW1lID0+IGdhbWUuZ2FtZVBhdGgpO1xufVxuXG5mdW5jdGlvbiBzZXR1cChkaXNjb3ZlcnkpIHtcbiAgcmV0dXJuIGZzLmVuc3VyZURpcldyaXRhYmxlQXN5bmMocGF0aC5qb2luKGRpc2NvdmVyeS5wYXRoLCAnTW9kcycpKTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gcmVzb2x2ZUdhbWVWZXJzaW9uKGRpc2NvdmVyeVBhdGg6IHN0cmluZykge1xuICBjb25zdCB2ZXJzaW9uRmlsZXBhdGggPSBwYXRoLmpvaW4oZGlzY292ZXJ5UGF0aCwgJ1dyYXRoX0RhdGEnLCAnU3RyZWFtaW5nQXNzZXRzJywgJ1ZlcnNpb24uaW5mbycpO1xuICB0cnkge1xuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBmcy5yZWFkRmlsZUFzeW5jKHZlcnNpb25GaWxlcGF0aCwgeyBlbmNvZGluZzogJ3V0ZjgnIH0pO1xuICAgIGNvbnN0IHNlZ21lbnRzID0gZGF0YS5zcGxpdCgnICcpO1xuICAgIHJldHVybiAoc2VnbWVudHNbM10pXG4gICAgICA/IFByb21pc2UucmVzb2x2ZShzZWdtZW50c1szXSlcbiAgICAgIDogUHJvbWlzZS5yZWplY3QobmV3IHV0aWwuRGF0YUludmFsaWQoJ0ZhaWxlZCB0byByZXNvbHZlIHZlcnNpb24nKSk7XG4gIH0gY2F0Y2ggKGVycikge1xuICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnIpO1xuICB9XG59XG5cbmZ1bmN0aW9uIG1haW4oY29udGV4dDogdHlwZXMuSUV4dGVuc2lvbkNvbnRleHQpIHtcbiAgY29udGV4dC5yZXF1aXJlRXh0ZW5zaW9uKCdtb2R0eXBlLXVtbScpO1xuICBjb250ZXh0LnJlZ2lzdGVyR2FtZShcbiAgICB7XG4gICAgICBpZDogR0FNRV9JRCxcbiAgICAgIG5hbWU6IE5BTUUsXG4gICAgICBsb2dvOiAnZ2FtZWFydC5qcGcnLFxuICAgICAgbWVyZ2VNb2RzOiB0cnVlLFxuICAgICAgcXVlcnlQYXRoOiBmaW5kR2FtZSxcbiAgICAgIHF1ZXJ5TW9kUGF0aDogKCkgPT4gJ01vZHMnLFxuICAgICAgZXhlY3V0YWJsZTogKCkgPT4gJ1dyYXRoLmV4ZScsXG4gICAgICBnZXRHYW1lVmVyc2lvbjogcmVzb2x2ZUdhbWVWZXJzaW9uLFxuICAgICAgcmVxdWlyZWRGaWxlczogWydXcmF0aC5leGUnXSxcbiAgICAgIGVudmlyb25tZW50OiB7XG4gICAgICAgIFN0ZWFtQVBQSWQ6IFNURUFNX0lELFxuICAgICAgfSxcbiAgICAgIGRldGFpbHM6XG4gICAgICB7XG4gICAgICAgIHN0ZWFtQXBwSWQ6ICtTVEVBTV9JRCxcbiAgICAgIH0sXG4gICAgICBzZXR1cCxcbiAgICB9KTtcbiAgY29udGV4dC5vbmNlKCgpID0+IHtcbiAgICBpZiAoY29udGV4dC5hcGkuZXh0LnVtbUFkZEdhbWUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgY29udGV4dC5hcGkuZXh0LnVtbUFkZEdhbWUoe1xuICAgICAgICBnYW1lSWQ6IEdBTUVfSUQsXG4gICAgICAgIGF1dG9Eb3dubG9hZFVNTTogdHJ1ZSxcbiAgICAgIH0pO1xuICAgIH1cbiAgfSlcblxuICByZXR1cm4gdHJ1ZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgbWFpbjtcbiJdfQ==