"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.testModLimitBreach = void 0;
const vortex_api_1 = require("vortex-api");
const common_1 = require("./common");
const MOD_LIMIT_THRESHOLD = 24;
async function testModLimitBreach(api, limitPatcher) {
    const t = api.translate;
    const state = api.store.getState();
    const isSuppressed = state?.settings?.['witcher3']?.suppressModLimitPatch ?? false;
    const profile = vortex_api_1.selectors.activeProfile(state);
    if (profile?.gameId !== common_1.GAME_ID || isSuppressed) {
        return Promise.resolve(undefined);
    }
    const mods = state.persistent.mods[common_1.GAME_ID] ?? {};
    const limitPatch = Object.values(mods).find(mod => mod.type === 'w3modlimitpatcher');
    if (limitPatch) {
        return Promise.resolve(undefined);
    }
    const enabled = Object.keys(mods).filter((id) => profile?.modState?.[id]?.enabled ?? false);
    let res;
    if (enabled.length >= MOD_LIMIT_THRESHOLD) {
        res = {
            severity: 'warning',
            description: {
                short: t('Mod Limit Reached'),
            },
            automaticFix: () => limitPatcher.ensureModLimitPatch(),
        };
    }
    return Promise.resolve(res);
}
exports.testModLimitBreach = testModLimitBreach;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ0ZXN0cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSwyQ0FBb0Q7QUFFcEQscUNBQThEO0FBRzlELE1BQU0sbUJBQW1CLEdBQUcsRUFBRSxDQUFDO0FBRXhCLEtBQUssVUFBVSxrQkFBa0IsQ0FDcEMsR0FBd0IsRUFDeEIsWUFBNkI7SUFDL0IsTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFDLFNBQVMsQ0FBQztJQUN4QixNQUFNLEtBQUssR0FBaUIsR0FBRyxDQUFDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNqRCxNQUFNLFlBQVksR0FBRyxLQUFLLEVBQUUsUUFBUSxFQUFFLENBQUMsVUFBVSxDQUFDLEVBQUUscUJBQXFCLElBQUksS0FBSyxDQUFDO0lBQ25GLE1BQU0sT0FBTyxHQUFtQixzQkFBUyxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMvRCxJQUFJLE9BQU8sRUFBRSxNQUFNLEtBQUssZ0JBQU8sSUFBSSxZQUFZLEVBQUU7UUFDL0MsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0tBQ25DO0lBRUQsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsZ0JBQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNsRCxNQUFNLFVBQVUsR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxJQUFJLEtBQUssbUJBQW1CLENBQUMsQ0FBQztJQUNyRixJQUFJLFVBQVUsRUFBRTtRQUVkLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQztLQUNuQztJQUVELE1BQU0sT0FBTyxHQUFHLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxFQUFFLEVBQUUsQ0FDOUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLE9BQU8sSUFBSSxLQUFLLENBQUMsQ0FBQztJQUU3QyxJQUFJLEdBQXNCLENBQUM7SUFFM0IsSUFBSSxPQUFPLENBQUMsTUFBTSxJQUFJLG1CQUFtQixFQUFFO1FBQ3pDLEdBQUcsR0FBRztZQUNKLFFBQVEsRUFBRSxTQUFTO1lBQ25CLFdBQVcsRUFBRTtnQkFDWCxLQUFLLEVBQUUsQ0FBQyxDQUFDLG1CQUFtQixDQUFDO2FBQzlCO1lBQ0QsWUFBWSxFQUFFLEdBQUcsRUFBRSxDQUFFLFlBQVksQ0FBQyxtQkFBbUIsRUFBVTtTQUNoRSxDQUFDO0tBQ0g7SUFFRCxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDOUIsQ0FBQztBQWxDRCxnREFrQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzZWxlY3RvcnMsIHR5cGVzLCB1dGlsIH0gZnJvbSAndm9ydGV4LWFwaSc7XG5cbmltcG9ydCB7IEdBTUVfSUQsIGdldFN1cHByZXNzTW9kTGltaXRCcmFuY2ggfSBmcm9tICcuL2NvbW1vbic7XG5pbXBvcnQgeyBNb2RMaW1pdFBhdGNoZXIgfSBmcm9tICcuL21vZExpbWl0UGF0Y2gnO1xuXG5jb25zdCBNT0RfTElNSVRfVEhSRVNIT0xEID0gMjQ7XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB0ZXN0TW9kTGltaXRCcmVhY2goXG4gICAgYXBpOiB0eXBlcy5JRXh0ZW5zaW9uQXBpLFxuICAgIGxpbWl0UGF0Y2hlcjogTW9kTGltaXRQYXRjaGVyKTogUHJvbWlzZTx0eXBlcy5JVGVzdFJlc3VsdD4ge1xuICBjb25zdCB0ID0gYXBpLnRyYW5zbGF0ZTtcbiAgY29uc3Qgc3RhdGU6IHR5cGVzLklTdGF0ZSA9IGFwaS5zdG9yZS5nZXRTdGF0ZSgpO1xuICBjb25zdCBpc1N1cHByZXNzZWQgPSBzdGF0ZT8uc2V0dGluZ3M/Llsnd2l0Y2hlcjMnXT8uc3VwcHJlc3NNb2RMaW1pdFBhdGNoID8/IGZhbHNlO1xuICBjb25zdCBwcm9maWxlOiB0eXBlcy5JUHJvZmlsZSA9IHNlbGVjdG9ycy5hY3RpdmVQcm9maWxlKHN0YXRlKTtcbiAgaWYgKHByb2ZpbGU/LmdhbWVJZCAhPT0gR0FNRV9JRCB8fCBpc1N1cHByZXNzZWQpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHVuZGVmaW5lZCk7XG4gIH1cblxuICBjb25zdCBtb2RzID0gc3RhdGUucGVyc2lzdGVudC5tb2RzW0dBTUVfSURdID8/IHt9O1xuICBjb25zdCBsaW1pdFBhdGNoID0gT2JqZWN0LnZhbHVlcyhtb2RzKS5maW5kKG1vZCA9PiBtb2QudHlwZSA9PT0gJ3czbW9kbGltaXRwYXRjaGVyJyk7XG4gIGlmIChsaW1pdFBhdGNoKSB7XG4gICAgLy8gQSBsaW1pdCBwYXRjaCBhbHJlYWR5IGV4aXN0cy5cbiAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHVuZGVmaW5lZCk7XG4gIH1cblxuICBjb25zdCBlbmFibGVkID0gT2JqZWN0LmtleXMobW9kcykuZmlsdGVyKChpZCkgPT5cbiAgICBwcm9maWxlPy5tb2RTdGF0ZT8uW2lkXT8uZW5hYmxlZCA/PyBmYWxzZSk7XG5cbiAgbGV0IHJlczogdHlwZXMuSVRlc3RSZXN1bHQ7XG5cbiAgaWYgKGVuYWJsZWQubGVuZ3RoID49IE1PRF9MSU1JVF9USFJFU0hPTEQpIHtcbiAgICByZXMgPSB7XG4gICAgICBzZXZlcml0eTogJ3dhcm5pbmcnLFxuICAgICAgZGVzY3JpcHRpb246IHtcbiAgICAgICAgc2hvcnQ6IHQoJ01vZCBMaW1pdCBSZWFjaGVkJyksXG4gICAgICB9LFxuICAgICAgYXV0b21hdGljRml4OiAoKSA9PiAobGltaXRQYXRjaGVyLmVuc3VyZU1vZExpbWl0UGF0Y2goKSBhcyBhbnkpLFxuICAgIH07XG4gIH1cblxuICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlcyk7XG59XG4iXX0=